/*
Remember while solving:
1)Convey your thoughts clearly to the interviewer
2)Maintain topmost code quality
3)Discuss testcases while solving
4)Evolve from brute->Better->optimal
*/


//link to the problem:https://leetcode.com/problems/game-of-life/
//DSA sheet by Arsh Goyal: Problem 24


class Solution {
    public void gameOfLife(int[][] board) {
        int m=board.length;
        int n=board[0].length;
        
        int[][] ans=new int[m][n];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                int count=0;
                int element=board[i][j];
                
                if(j+1<n && board[i][j+1]==1)
                    count++;
                if(j-1>=0 && board[i][j-1]==1)
                    count++;
                if(i+1<m && board[i+1][j]==1)
                    count++;
                if(i-1>=0 && board[i-1][j]==1)
                    count++;
                if(i-1>=0 && j+1<n && board[i-1][j+1]==1)
                    count++;
                if(i-1>=0 && j-1>=0 && board[i-1][j-1]==1)
                    count++;
                if(i+1<m && j-1>=0 && board[i+1][j-1]==1)
                    count++;
                if(i+1<m && j+1<n && board[i+1][j+1]==1)
                    count++;
                
                if(element==1){
                    if(count!=2 && count!=3)
                        ans[i][j]=0;
                    else
                        ans[i][j]=1;
                }
                
                
                if(element==0){
                    if(count==3)
                        ans[i][j]=1;
                    else
                        ans[i][j]=0;
                }
                    
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                board[i][j]=ans[i][j];
            }
        }
    }
}
