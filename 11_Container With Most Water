//link to the problem:https://leetcode.com/problems/container-with-most-water/
//DSA sheet by Arsh Goyal: Problem 11

//Brute:Use two loops :O(N^2)
//Optimal:Increment/Decrement the one with less height

class Solution {
    public int min(int first,int second){
        if(first<second)
            return first;
        else
            return second;
    }
    public int maxArea(int[] height) {
        int n=height.length;
        int area=0,max_area=Integer.MIN_VALUE;
        int start=0,end=n-1,width=n-1;
        for(int i=0;i<n;i++){
            area=(min(height[start],height[end]))*width;
            if(area>max_area){
                max_area=area;
            }
            
            if(height[start]<height[end])
                start++;
            else
                end--;
                width--;
        }
        return max_area;
    }
}
